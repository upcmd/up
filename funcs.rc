goup(){
    go run app/up/*.go $@
}

wiptest(){
    goup ngo task -d ./tests/functests -t wip.yml -i dev --configdir=./tests/functests
}

wiplist(){
    goup list -d ./tests/functests -t wip.yml -i dev --configdir=./tests/functests
}

wipui(){
    goup ui -d ./tests/functests -t wip.yml -i dev --configdir=./tests/functests
}

wipeptest(){
  profile=$1
  goup ngo task -d ./tests/functests -t wip.yml -p $profile --configdir=./tests/functests
}


wipeptestvvv(){
  profile=$1
  goup ngo task -d ./tests/functests -t wip.yml -p $profile -v vvv --configdir=./tests/functests
}


wipfunctest(){
    go test ./tests/functests/wip_test.go -v
}

wiptestvvvv(){
    goup ngo task -d ./tests/functests -t wip.yml -i dev -v vvvv --configdir=./tests/functests
}

wiptestvv(){
    goup ngo task -d ./tests/functests -t wip.yml -i dev -v vv --configdir=./tests/functests
}

wiptestvvv(){
    goup ngo task -d ./tests/functests -t wip.yml -i dev -v vvv --configdir=./tests/functests
}

wiptestvvvvv(){
    goup ngo task -d ./tests/functests -t wip.yml -i dev -v vvvvv --configdir=./tests/functests
}

wiptestdebug(){
    goup ngo task -d ./tests/functests -t wip.yml -i dev -v vvvvv
}

wiptestvalidate(){
    goup validate task task -d ./tests/functests -t wip.yml -i dev -v vvvvv
}

mwiptest(){
  dir=./tests/modtests/wip
  goup ngo -d $dir -i dev --configdir=$dir -w refdir
}


mptestx(){
echo "syntax: modtestx 0003"
if [ "$1" != "" ];then
  dir=./tests/modtests/$1
  goup ngo -d $dir -i dev --configdir=$dir
else
  echo "please input a case number"
fi
}


mregression(){
  GOTEST=true go test ./tests/modtests/mcasec_test.go -v
}


mtestx(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup ngo -d $dir -i dev --configdir=$dir -w refdir
  fi
}


mtmptestx(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup mod test -d $dir -i dev --configdir=$dir -w refdir
  fi
}


mlistx(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup mod list -d $dir -i dev --configdir=$dir -w refdir
  fi
}

mprobex(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup mod probe -d $dir -i dev --configdir=$dir -w refdir
  fi
}

mcleanx(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup mod clean -d $dir -i dev --configdir=$dir -w refdir
  fi
}

mpullx(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup mod pull -d $dir -i dev --configdir=$dir -w refdir
  fi
}


mlockx(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup mod lock -d $dir -i dev --configdir=$dir -w refdir
  fi
}




mtestxvvv(){
  if [ "$1" == "" ];then
    echo "please input the casename(dir name)"
  else
    dir=./tests/modtests/$1
    goup ngo -d $dir -i dev --configdir=$dir -w refdir -v vvv
  fi
}



uplist(){
goup list task
}

uptestx(){
echo "syntax: uptestx c0033"
    goup ngo task -d ./tests/functests -t $1 -i dev --configdir=./tests/functests
}

feature_test_x(){
echo "syntax: feature_test_x testing_folder"
    testing_folder=$1
    if [ "${testing_folder}" != "" ];then
        goup ngo task -d ./tests/functests/${testing_folder} -t feature -i dev --configdir=./tests/functests
    else
        echo "Please input a feature test folder name"
    fi
}


showcodex(){
echo "syntax: showcodex c0033"
    highlight ./tests/functests/$1.yml --syntax=yaml
}


uptestxvvv(){
echo "syntax: uptestx c0033"
    goup ngo task -d ./tests/functests -t $1 -i dev -v vvv --configdir=./tests/functests
}

uptestxvv(){
echo "syntax: uptestx c0033"
    goup ngo task -d ./tests/functests -t $1 -i dev -v vv --configdir=./tests/functests
}

uptestxvvvv(){
echo "syntax: uptestx c0033"
    goup ngo task -d ./tests/functests -t $1 -i dev -v vvvv --configdir=./tests/functests
}


uptestxvvvvv(){
echo "syntax: uptestx c0033"
    goup ngo task -d ./tests/functests -t $1 -i dev -v vvvvv --configdir=./tests/functests
}

uptestf(){
    goup ngo testf
}

upregression(){
  GOTEST=true go test ./tests/functests/casec_test.go -v
}

man_funclist(){
cat funclist |fzf
}

start_nix_docker(){
docker run -it -v `pwd`:/data nixos/nix /bin/sh
}

start_up_dev_docker(){
docker run -it -v `pwd`:/up -v ${HUGO_DOC_DIR}:/updocs cmgolang /bin/bash
}

inspect_task_example(){
#  goup list task -d ./tests/functests -t c0115.yml -i dev --configdir=./tests/functests
#  goup list subtask1 -d ./tests/functests -t c0115.yml -i dev --configdir=./tests/functests
#  goup list build -d ./tests/functests -t f0116.yml -i dev --configdir=./tests/functests
#  goup list task -d ./tests/functests -t c0116.yml -i dev --configdir=./tests/functests
  goup list task -d ./tests/functests -t wip.yml -i dev --configdir=./tests/functests
}

up_test_stack_trace_mac(){
 build/mac/up ngo -d ./tests/modtests/0001 -i dev --configdir=./tests/modtests/0001 -w refdir -v vvvvvv
}

up_test_stack_trace_linux(){
 build/linux/up ngo -d ./tests/modtests/0001 -i dev --configdir=./tests/modtests/0001 -w refdir -v vvvvvv
}

goup_test_stack_trace(){
 goup ngo -d ./tests/modtests/0001 -i dev --configdir=./tests/modtests/0001 -w refdir -v vvvvvv
}


run_example(){
echo """syntax: run_example case_file_name verbose_level
example:
  run_example c0033 v
  run_example c0033 vvv
"""

  if [ "$1" == "" ];then
    echo "please input the casename, eg c0033, which could be located at ./tests/functests"
  else

    if [ "$2" == "" ];then
      verbose=v
    else
      verbose=$2
    fi

  up ngo task -d ./tests/functests -t $1 --configdir=./tests/functests -v $verbose
  fi
}



run_module_example(){

echo """syntax: run_module_example case_name verbose_level
example:
  run_module_example 0003 v
  run_module_example 0003 vvv
"""

  if [ "$1" == "" ];then
    echo "please input the module casename(dir name) located at ./tests/modtests"
  else

    if [ "$2" == "" ];then
      verbose=v
    else
      verbose=$2
    fi

    dir=./tests/modtests/$1
    up ngo -d $dir --configdir=$dir -w refdir -v $verbose
  fi
}

run_upcli_docker(){
  docker run -it --rm  -v `pwd`:/workspace docker.pkg.github.com/upcmd/up/upcli:latest /bin/sh
}
